<?xml version="1.0" ?>
<sdf version="1.6">
<static>false</static>
  <model name="prius_hybrid">
    <pose>0 0 0.03 0 0 0</pose>
     <link name="chassis">

      <velocity>-1e-06 -1.8e-05 2.1e-05 3e-06 -0 0</velocity>
      <acceleration>5.1e-05 7e-06 -2e-06 -3e-06 6.3e-05 -2.6e-05</acceleration>
      <wrench>0.067517 0.009756 -0.002619 0 -0 0</wrench>

      <inertial>
        <mass>1326.0</mass>
        <pose>0 -0.266 0.48 0 0 0</pose>
        <inertia>
          <ixx>2581.13354740</ixx>
          <ixy>0.0</ixy>
          <iyy>591.30846112</iyy>
          <ixz>0.0</ixz>
          <iyz>0.0</iyz>
          <izz>2681.95008628</izz>
        </inertia>
      </inertial>

      <visual name="chassis_visual">
        <geometry>
          <mesh>
            <uri>model://prius_hybrid/meshes/Hybrid.obj</uri>
            <scale>0.01 0.01 0.01</scale>
            <submesh>
              <name>Hybrid</name>
              <center>false</center>
            </submesh>
          </mesh>
        </geometry>
      </visual>

      <visual name="interior_visual">
        <geometry>
          <mesh>
            <uri>model://prius_hybrid/meshes/Hybrid.obj</uri>
            <scale>0.01 0.01 0.01</scale>
            <submesh>
              <name>Hybrid_Interior</name>
              <center>false</center>
            </submesh>
          </mesh>
        </geometry>
      </visual>

      <visual name="windows_visual">
        <geometry>
          <mesh>
            <uri>model://prius_hybrid/meshes/Hybrid.obj</uri>
            <scale>0.01 0.01 0.01</scale>
            <submesh>
              <name>Hybrid_Windows</name>
              <center>false</center>
            </submesh>
          </mesh>
        </geometry>
      </visual>

      <collision name="chassis">
        <pose>0.0 0.05 0.625 0 0 0</pose>
        <geometry>
          <box>
            <size>1.7526 2.1 0.95</size>
          </box>
        </geometry>
      </collision>

      <collision name="front_bumper">
        <pose>0.0 -2.0 0.458488 0.0 0 0</pose>
        <geometry>
          <box>
            <size>1.337282 0.48 0.566691</size>
          </box>
        </geometry>
      </collision>

      <collision name="hood">
        <pose>0.0 -1.900842 0.676305 0.341247 0 0</pose>
        <geometry>
          <box>
            <size>1.597968 0.493107 0.265468</size>
          </box>
        </geometry>
      </collision>

      <collision name="windshield">
        <pose>0.0 -0.875105 1.032268 0.335476 0 0</pose>
        <geometry>
          <box>
            <size>1.168381 1.654253 0.272347</size>
          </box>
        </geometry>
      </collision>

      <collision name="top_front">
        <pose>0.0 0.161236 1.386042 0.135030 0 0</pose>
        <geometry>
          <box>
            <size>1.279154 0.625988 0.171868</size>
          </box>
        </geometry>
      </collision>

      <collision name="top_rear">
        <pose>0.0 0.817696 1.360069 -0.068997 0 0</pose>
        <geometry>
          <box>
            <size>1.285130 0.771189 0.226557</size>
          </box>
        </geometry>
      </collision>

      <collision name="rear_window">
        <pose>0.0 1.640531 1.175126 -0.262017 0 0</pose>
        <geometry>
          <box>
            <size>1.267845 1.116344 0.244286</size>
          </box>
        </geometry>
      </collision>

      <collision name="trunk">
        <pose>0.0 1.637059 0.888180 0.0 0 0</pose>
        <geometry>
          <box>
            <size>1.788064 1.138988 0.482746</size>
          </box>
        </geometry>
      </collision>

      <collision name="back_bumper">
        <pose>0.0 2.054454 0.577870 0.0 0 0</pose>
        <geometry>
          <box>
            <size>1.781650 0.512093 0.581427</size>
          </box>
        </geometry>
      </collision>

      <!--Lasers-->

      <sensor name='velodyne-VLP16' type='ray'>
          <always_on>false</always_on>
          <visualize>false</visualize>
          <pose>0 0.4 1.8 0 0 -1.5707</pose>
          <update_rate>10</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>1875</samples>
                <resolution>1</resolution>
                <min_angle>-3.14159</min_angle>
                <max_angle>3.14159</max_angle>
              </horizontal>
              <vertical>
                <samples>16</samples>
                <resolution>1</resolution>
                <min_angle>-0.261799</min_angle>
                <max_angle>0.261799</max_angle>
              </vertical>
            </scan>
            <range>
              <min>0.055</min>
              <max>140</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0</mean>
              <stddev>0</stddev>
            </noise>
          </ray>
          <plugin name='gazebo_ros_laser_controller' filename='libgazebo_ros_velodyne_laser.so'>
            <ros>
            <remapping>~/out:=velodyne_points</remapping>
          </ros>
            <frame_name>chassis</frame_name>
            <min_range>0.9</min_range>
            <max_range>130.0</max_range>
            <gaussianNoise>0.008</gaussianNoise>
          </plugin>
        </sensor>

      <!--<sensor name="head_hokuyo_sensor1" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <pose>1 -2.3 0.5 0 0.05 0</pose>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1.000000</resolution>
              <min_angle>-1.570796</min_angle>
              <max_angle>1.570796</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120000</min>
            <max>30.0</max>
            <resolution>0.010</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller1" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan_left</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>chassis</frame_name>
        </plugin>
      </sensor>

      <sensor name="head_hokuyo_sensor2" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <pose>-1 -2.3 0.5 -0 0.05 3.14</pose>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1.000000</resolution>
              <min_angle>-1.570796</min_angle>
              <max_angle>1.570796</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120000</min>
            <max>30.0</max>
            <resolution>0.010</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller2" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan_right</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>chassis</frame_name>
        </plugin>
      </sensor>-->
      
    
    <sensor name="hls_lfcd_lds1" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <pose>1 -2.3 0.5 0 0.05 0</pose>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120000</min>
            <max>10</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="turtlebot3_laserscan1" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan_left</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>chassis</frame_name>
        </plugin>
      </sensor>
     
     <sensor name="hls_lfcd_lds2" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <pose>-1 -2.3 0.5 -0 0.05 3.14</pose>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120000</min>
            <max>10</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="turtlebot3_laserscan2" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan_right</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>chassis</frame_name>
        </plugin>
      </sensor>
      
      
      <!--Cameras-->
     <sensor name='front_camera_sensor' type='camera'>
        <update_rate>30</update_rate>
        <camera name='front_camera'>
          <horizontal_fov>1.39626</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name='front_camera_controller' filename='libgazebo_ros_camera.so'>
          <alwaysOn>0</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>/prius/front_camera</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>/prius/front_camera/camera_info</cameraInfoTopicName>
          <frame_name>chassis</frame_name>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
        <pose>0 -0.4 1.4 0 0.05 -1.5707</pose>
      </sensor>

      <sensor name="real_sense" type="depth">
        <always_on>true</always_on>
        <update_rate>15</update_rate>
        <pose>0 -0.4 1.4 0 0.05 -1.5707</pose>
        <camera name="realsense_depth_camera">
            <horizontal_fov>1.46608</horizontal_fov>
            <image>
                <width>424</width>
                <height>240</height>
                <format>B8G8R8</format>
            </image>
            <clip>
                <near>0.05</near>
                <far>8</far>
            </clip>
        </camera>
        <plugin name="intel_realsense_d430_depth_driver" filename="libgazebo_ros_camera.so">
            <ros>
                <namespace>d430</namespace>
                <remapping>real_sense/image_raw:=color/image_raw</remapping>
                <remapping>real_sense/depth/image_raw:=depth/image_rect_raw</remapping>
                <remapping>real_sense/camera_info:=camera_info</remapping>
                <remapping>real_sense/depth/camera_info:=depth/camera_info</remapping>
                <remapping>real_sense/points:=depth/points</remapping>
            </ros>
            <camera_name>real_sense</camera_name>
            <frame_name>chassis</frame_name>
            <hack_baseline>0.07</hack_baseline>
            <min_depth>0.05</min_depth>
            <max_depth>8.0</max_depth>
        </plugin>
    </sensor>
      
      <sensor name='left_camera_sensor' type='camera'>
        <update_rate>30</update_rate>
        <camera name='left_camera'>
          <horizontal_fov>1.39626</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name='left_camera_controller' filename='libgazebo_ros_camera.so'>
          <alwaysOn>0</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>/prius/left_camera</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>/prius/left_camera/camera_info</cameraInfoTopicName>
          <frame_name>chassis</frame_name>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
        <pose>1 -0.7 1 0 0.05 1</pose>
      </sensor>
      
      <sensor name='right_camera_sensor' type='camera'>
        <update_rate>30</update_rate>
        <camera name='right_camera'>
          <horizontal_fov>1.39626</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name='right_camera_controller' filename='libgazebo_ros_camera.so'>
          <alwaysOn>0</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>/prius/right_camera</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>/prius/right_camera/camera_info</cameraInfoTopicName>
          <frame_name>chassis</frame_name>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
        <pose>-1 -0.7 1 0 0.05 2.1416</pose>
      </sensor>

      <!--ultrasonic sensors-->

      <sensor name="back_left_far_sonar_sensor" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>0.7 2.4 0.5 0 -0 1.5707</pose>
        <update_rate>50</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.18</min_angle>
                    <max_angle>0.18</max_angle>
                </horizontal>
                <vertical>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.01</min_angle>
                    <max_angle>0.01</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.02</min>
                <max>8</max>
                <resolution>0.01</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="bytes_ultrasound1" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <namespace>distance</namespace>
                <remapping>~/out:=back/left/far/range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
            <radiation_type>ultrasound</radiation_type>
            <frame_name>chassis</frame_name>
        </plugin>
    </sensor>

    <sensor name="back_left_middle_sonar_sensor" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>0.24 2.4 0.5 0 -0 1.5707</pose>
        <update_rate>50</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.18</min_angle>
                    <max_angle>0.18</max_angle>
                </horizontal>
                <vertical>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.01</min_angle>
                    <max_angle>0.01</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.02</min>
                <max>8</max>
                <resolution>0.01</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="bytes_ultrasound" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <namespace>distance</namespace>
                <remapping>~/out:=back/left/middle/range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
            <radiation_type>ultrasound</radiation_type>
            <frame_name>chassis</frame_name>
        </plugin>
    </sensor>

    <sensor name="back_right_far_sonar_sensor" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>-0.7 2.4 0.5 0 -0 1.5707</pose>
        <update_rate>50</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.18</min_angle>
                    <max_angle>0.18</max_angle>
                </horizontal>
                <vertical>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.01</min_angle>
                    <max_angle>0.01</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.02</min>
                <max>8</max>
                <resolution>0.01</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="bytes_ultrasound3" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <namespace>distance</namespace>
                <remapping>~/out:=back/right/far/range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
            <radiation_type>ultrasound</radiation_type>
            <frame_name>chassis</frame_name>
        </plugin>
    </sensor>

    <sensor name="back_right_middle_sonar_sensor" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>-0.24 2.4 0.5 0 -0 1.5707</pose>
        <update_rate>50</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.18</min_angle>
                    <max_angle>0.18</max_angle>
                </horizontal>
                <vertical>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.01</min_angle>
                    <max_angle>0.01</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.02</min>
                <max>8</max>
                <resolution>0.01</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="bytes_ultrasound4" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <namespace>distance</namespace>
                <remapping>~/out:=back/right/middle/range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
            <radiation_type>ultrasound</radiation_type>
            <frame_name>chassis</frame_name>
        </plugin>
    </sensor>

    <sensor name="front_left_far_sonar_sensor" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>0.7 -2.1 0.5 0 0 -1.5707</pose>
        <update_rate>50</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.18</min_angle>
                    <max_angle>0.18</max_angle>
                </horizontal>
                <vertical>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.01</min_angle>
                    <max_angle>0.01</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.02</min>
                <max>8</max>
                <resolution>0.01</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="bytes_ultrasound5" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <namespace>distance</namespace>
                <remapping>~/out:=front/left/far/range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
            <radiation_type>ultrasound</radiation_type>
            <frame_name>chassis</frame_name>
        </plugin>
    </sensor>

    <sensor name="front_left_middle_sonar_sensor" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>0.24 -2.3 0.5 0 0 -1.5707</pose>
        <update_rate>50</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.18</min_angle>
                    <max_angle>0.18</max_angle>
                </horizontal>
                <vertical>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.01</min_angle>
                    <max_angle>0.01</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.02</min>
                <max>8</max>
                <resolution>0.01</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="bytes_ultrasound6" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <namespace>distance</namespace>
                <remapping>~/out:=front/left/middle/range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
            <radiation_type>ultrasound</radiation_type>
            <frame_name>chassis</frame_name>
        </plugin>
    </sensor>

    <sensor name="front_right_far_sonar_sensor" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>-0.7 -2.1 0.5 0 0 -1.5707</pose>
        <update_rate>50</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.18</min_angle>
                    <max_angle>0.18</max_angle>
                </horizontal>
                <vertical>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.01</min_angle>
                    <max_angle>0.01</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.02</min>
                <max>8</max>
                <resolution>0.01</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="bytes_ultrasound7" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <namespace>distance</namespace>
                <remapping>~/out:=front/right/far/range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
            <radiation_type>ultrasound</radiation_type>
            <frame_name>chassis</frame_name>
        </plugin>
    </sensor>

    <sensor name="front_right_middle_sonar_sensor" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>-0.24 -2.3 0.5 0 0 -1.5707</pose>
        <update_rate>50</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.18</min_angle>
                    <max_angle>0.18</max_angle>
                </horizontal>
                <vertical>
                    <samples>5</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-0.01</min_angle>
                    <max_angle>0.01</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.02</min>
                <max>8</max>
                <resolution>0.01</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="bytes_ultrasound8" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <namespace>distance</namespace>
                <remapping>~/out:=front/right/middle/range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
            <radiation_type>ultrasound</radiation_type>
            <frame_name>chassis</frame_name>
        </plugin>
    </sensor>
      
    </link>

    <link name="steering_wheel">
      <pose>0.357734 -0.627868 0.988243 -1.302101 0 0</pose>
      <velocity>-1e-06 -2.1e-05 2.2e-05 -4e-06 -0.000576 0.000158</velocity>
      <acceleration>9.2e-05 -6.1e-05 -0.000265 -0.002182 -0.1663 0.040066</acceleration>
      <wrench>9.2e-05 -6.1e-05 -0.000265 0 -0 0</wrench>

      <inertial>
        <mass>1.0</mass>
        <inertia>
          <ixx>0.14583300</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.14583300</iyy>
          <iyz>0</iyz>
          <izz>0.12500000</izz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.178172</radius>
            <length>0.041845</length>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode>
              <min_depth>0.003</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
      <visual name="visual">
        <pose>0 0 0 1.302101 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://lcube_description/meshes/Hybrid.obj</uri>
            <scale>0.01 0.01 0.01</scale>
            <submesh>
              <name>Steering_Wheel</name>
              <center>true</center>
            </submesh>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name="front_left_wheel">
      <pose>0.76 -1.41 0.3 0 0 0</pose>
      <velocity>-0 -1.9e-05 3.2e-05 6e-05 1e-06 -5.7e-05</velocity>
      <acceleration>-0.000319 2.4e-05 2.2e-05 -8.2e-05 -0.001074 0.058368</acceleration>
      <wrench>-0.003512 0.000265 0.000244 0 -0 0</wrench>
      
      <inertial>
        <mass>11</mass>
        <inertia>
          <ixx>0.58631238</ixx>
          <ixy>0.0</ixy>
          <iyy>0.33552910</iyy>
          <ixz>0.0</ixz>
          <iyz>0.0</iyz>
          <izz>0.33552910</izz>
        </inertia>
      </inertial>

      <visual name="visual">
        <pose>0.04 0.0 0.0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://lcube_description/meshes/Hybrid.obj</uri>
            <scale>0.01 0.01 0.01</scale>
            <submesh>
              <name>Wheel_Front_Left_</name>
              <center>true</center>
            </submesh>
          </mesh>
        </geometry>
      </visual>

      <collision name="collision">
        <pose>0.0 0.0 0.0 0 1.5707963267948966 0</pose>
        <geometry>
          <sphere>
            <radius>0.31265</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0.9</mu>
              <mu2>0.9</mu2>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <kp>1e9</kp>
            </ode>
          </contact>
        </surface>

      </collision>
    </link>

    <link name="front_right_wheel">
      <pose>-0.76 -1.41 0.3 0 0 0</pose>
      <velocity>-1e-06 -2e-05 3.1e-05 6.1e-05 -1e-06 1.7e-05</velocity>
      <acceleration>0.000177 -1.3e-05 -3.2e-05 4.3e-05 0.000577 -0.018318</acceleration>
      <wrench>0.001943 -0.000139 -0.000353 0 -0 0</wrench>

      <inertial>
        <mass>11</mass>
        <inertia>
          <ixx>0.58631238</ixx>
          <ixy>0.0</ixy>
          <iyy>0.33552910</iyy>
          <ixz>0.0</ixz>
          <iyz>0.0</iyz>
          <izz>0.33552910</izz>
        </inertia>
      </inertial>
      <visual name="visual">
        <pose>-0.04 0.0 0.0 0 0 0</pose>
        <pose>0 0 0.0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://lcube_description/meshes/Hybrid.obj</uri>
            <scale>0.01 0.01 0.01</scale>
            <submesh>
              <name>Wheel_Front_Right</name>
              <center>true</center>
            </submesh>
          </mesh>
        </geometry>
      </visual>

      <collision name="collision">
        <pose>0.0 0.0 0.0 0 1.5707963267948966 0</pose>
        <geometry>
          <sphere>
            <radius>0.31265</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0.9</mu>
              <mu2>0.9</mu2>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <kp>1e9</kp>
            </ode>
          </contact>
        </surface>

      </collision>
    </link>


    <link name="rear_left_wheel">
      <pose>0.786 1.45 0.3 0 0 0</pose>
      <velocity>-1e-06 -1.9e-05 2.5e-05 6e-05 -0 0</velocity>
      <acceleration>-3e-06 2.3e-05 2e-06 -7.4e-05 -1.1e-05 -2.5e-05</acceleration>
      <wrench>-3.7e-05 0.000257 2.1e-05 0 -0 0</wrench>

      <inertial>
        <mass>11</mass>
        <inertia>
          <ixx>0.58631238</ixx>
          <ixy>0.0</ixy>
          <iyy>0.33552910</iyy>
          <ixz>0.0</ixz>
          <iyz>0.0</iyz>
          <izz>0.33552910</izz>
        </inertia>
      </inertial>

      <visual name="visual">
        <pose>0.04 0.0 0.0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://lcube_description/meshes/Hybrid.obj</uri>
            <scale>0.01 0.01 0.01</scale>
            <submesh>
              <name>Wheel_Front_Left_</name>
              <center>true</center>
            </submesh>
          </mesh>
        </geometry>
      </visual>

      <collision name="collision">
        <pose>0.0 0.0 0.0 0 1.5707963267948966 0</pose>
        <geometry>
          <sphere>
            <radius>0.31265</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1.1</mu>
              <mu2>1.1</mu2>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <kp>1e9</kp>
            </ode>
          </contact>
        </surface>

      </collision>
    </link>

    <link name="rear_right_wheel">
      <pose>-0.786 1.45 0.3 0 0 0</pose>
      <velocity>-2e-06 -1.9e-05 2.5e-05 6.2e-05 -3e-06 0</velocity>
      <acceleration>-4e-06 -1.4e-05 2e-06 4.3e-05 -1.2e-05 -2.7e-05</acceleration>
      <wrench>-4.3e-05 -0.000149 2.5e-05 0 -0 0</wrench>

      <inertial>
        <mass>11</mass>
        <inertia>
          <ixx>0.58631238</ixx>
          <ixy>0.0</ixy>
          <iyy>0.33552910</iyy>
          <ixz>0.0</ixz>
          <iyz>0.0</iyz>
          <izz>0.33552910</izz>
        </inertia>
      </inertial>
      <visual name="visual">
        <pose>-0.04 0.0 0.0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://lcube_description/meshes/Hybrid.obj</uri>
            <scale>0.01 0.01 0.01</scale>
            <submesh>
              <name>Wheel_Front_Right</name>
              <center>true</center>
            </submesh>
          </mesh>
        </geometry>
      </visual>

      <collision name="collision">
        <pose>0.0 0.0 0.0 0 1.5707963267948966 0</pose>
        <geometry>
          <sphere>
            <radius>0.31265</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1.1</mu>
              <mu2>1.1</mu2>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <kp>1e9</kp>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>

    <joint type="universal" name="front_left_combined_joint">
      <pose>0 0 0 -0.08726646259971647 0 0</pose>
      <child>front_left_wheel</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <!-- +- 50 degrees -->
          <lower>-0.8727</lower>
          <upper>0.8727</upper>
        </limit>
      </axis>
      <axis2>
        <xyz>1 0 0</xyz>
        <dynamics>
          <friction>18.0474092253</friction>
        </dynamics>
      </axis2>
    </joint>

    <joint type="universal" name="front_right_combined_joint">
      <pose>0 0 0 -0.08726646259971647 0 0</pose>
      <child>front_right_wheel</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <!-- +- 50 degrees -->
          <lower>-0.8727</lower>
          <upper>0.8727</upper>
        </limit>
      </axis>
      <axis2>
        <xyz>1 0 0</xyz>
        <dynamics>
          <friction>18.0474092253</friction>
        </dynamics>
      </axis2>
    </joint>

    <link name="rear_axle">
      <pose>0 1.45 0.3 0 0 0</pose>
      <inertial>
        <mass>30.0</mass>
        <inertia>
          <ixx>0.08437499999999999</ixx>
          <ixy>0.0</ixy>
          <iyy>4.64581</iyy>
          <ixz>0.0</ixz>
          <iyz>0.0</iyz>
          <izz>4.64581</izz>
        </inertia>
      </inertial>
      <visual name="visual">
        <pose>0.0 0.0 0.0 0 1.5707963267948966 0</pose>
        <geometry>
          <cylinder>
            <length>1.357</length>
            <radius>0.075</radius>
          </cylinder>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Grey</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <joint type="revolute" name="rear_axle_joint">
      <child>rear_axle</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-0.05089058524173028</lower>
          <upper>0.05089058524173028</upper>
        </limit>
        <dynamics>
          <spring_stiffness>20000.0</spring_stiffness>
          <damping>2000.0</damping>
        </dynamics>
      </axis>
    </joint>
    <joint type="revolute" name="rear_left_wheel_joint">
      <child>rear_left_wheel</child>
      <parent>rear_axle</parent>
      <axis>
        <xyz>1 0 0</xyz>
        <dynamics>
          <friction>12.031606150200002</friction>
        </dynamics>
      </axis>
    </joint>
    <joint type="revolute" name="rear_right_wheel_joint">
      <child>rear_right_wheel</child>
      <parent>rear_axle</parent>
      <axis>
        <xyz>1 0 0</xyz>
        <dynamics>
          <friction>12.031606150200002</friction>
        </dynamics>
      </axis>
    </joint>

    <joint name="steering_joint" type="revolute">
      <pose>-0.002 0 0 0 0 0</pose>
      <parent>chassis</parent>
      <child>steering_wheel</child>
      <axis>
        <xyz>0 0.964095 0.265556</xyz>
        <limit>
          <lower>-7.85</lower>
          <upper>7.85</upper>
        </limit>
        <dynamics>
          <damping>1.0</damping>
        </dynamics>
        <use_parent_model_frame>true</use_parent_model_frame>
      </axis>
      <physics>
        <ode>
          <cfm_damping>1</cfm_damping>
        </ode>
      </physics>
    </joint>


   <plugin name='ackermann_drive' filename='libgazebo_ros_ackermann_drive.so'>
      <update_rate>100.0</update_rate>
      <front_left_joint>front_left_combined_joint</front_left_joint>
      <front_right_joint>front_right_combined_joint</front_right_joint>
      <rear_left_joint>rear_left_wheel_joint</rear_left_joint>
      <rear_right_joint>rear_right_wheel_joint</rear_right_joint>
      <left_steering_joint>front_left_combined_joint</left_steering_joint>
      <right_steering_joint>front_right_combined_joint</right_steering_joint>
      <steering_wheel_joint>steering_joint</steering_wheel_joint>
      <max_steer>0.6458</max_steer>
      <max_steering_angle>7.85</max_steering_angle>
      <max_speed>20</max_speed>
      <left_steering_pid_gain>1500 0 1</left_steering_pid_gain>
      <left_steering_i_range>0 0</left_steering_i_range>
      <right_steering_pid_gain>1500 0 1</right_steering_pid_gain>
      <right_steering_i_range>0 0</right_steering_i_range>
      <linear_velocity_pid_gain>1000 0 1</linear_velocity_pid_gain>
      <linear_velocity_i_range>0 0</linear_velocity_i_range>
      <publish_odom>1</publish_odom>
      <publish_odom_tf>1</publish_odom_tf>
      <publish_wheel_tf>1</publish_wheel_tf>
      <publish_distance>1</publish_distance>
      <odometry_frame>odom_demo</odometry_frame>
      <robot_base_frame>chassis</robot_base_frame>
    </plugin>


    <plugin name='joint_state_publisher' filename='libgazebo_ros_joint_state_publisher.so'>
      <ros>
      <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>100.0</update_rate>
      <joint_name>front_left_combined_joint</joint_name>
      <joint_name>front_right_combined_joint</joint_name>
      <joint_name>rear_axle_joint</joint_name>
      <joint_name>rear_left_wheel_joint</joint_name>
      <joint_name>rear_right_wheel_joint</joint_name>
      <joint_name>steering_joint</joint_name>      
      <alwaysOn>1</alwaysOn>
    </plugin>

    

  </model>

</sdf>
